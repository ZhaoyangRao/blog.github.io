(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{152:function(t,r,a){"use strict";a.r(r);var e=a(0),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"浏览器同域名请求并发限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器同域名请求并发限制"}},[t._v("#")]),t._v(" 浏览器同域名请求并发限制")]),t._v(" "),a("p",[t._v("当我们打开一个网页，浏览器会加载很多资源，这些资源如果是在一个域名下发起的，那么其实浏览器并不会全部资源并发加载，而是有自己的特定的并发数量。"),a("br"),t._v("\n其实你仔细看，有些资源一直处于pending，等前面几条加载完成，再轮询下面几条资源，不同的浏览器在不同的协议下并发限制的数量并不一致，多的可能达到10条，少的2条"),a("br")]),t._v(" "),a("p",[t._v("本来我想把各个浏览器在不同的协议下，并发限制的数量凑凑字数，但是其实没有多大意义，只要知道浏览器有这个策略就行了。"),a("br")]),t._v(" "),a("h4",{attrs:{id:"浏览器为什么要这样呢？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器为什么要这样呢？"}},[t._v("#")]),t._v(" 浏览器为什么要这样呢？")]),t._v(" "),a("p",[t._v("一方面是浏览器作为作为客户端自己的优化，过多的并发涉及到端口数量，线程开销，尤其http/1.1，有keep alive还可以复用现有的连接。"),a("br"),t._v("\n另一方面确实为了你自己的服务器，避免大批量请求到达服务器，然后服务器给ban了。"),a("br")]),t._v(" "),a("h4",{attrs:{id:"案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),a("p",[t._v("如果你有100张小图片，可能每个就5kb，但是会发起500条请求，又因为并发限制，你要把这些文件请求完成，闭着眼睛想都能知道会花费不少时间，遇到这种问题怎么玩。")]),t._v(" "),a("p",[t._v("1.这就是以前用的比较多的雪碧图，把很多小icon放在一张图片上，这么多小图片其实只需要一条请求。"),a("br"),t._v("=>（请求合并了，但是单个资源有可能更大了）"),a("br"),t._v("\n2.既然同域名并发有限制，那么我就不让他并发，把图片挂载在不同的域名下，类似img1.baidu.com、img2.baidu.com、img3.baidu.com、img4.baidu.com。"),a("br"),t._v("=>（突破了限制，却可能会产生更多的DNS解析过程）"),a("br")]),t._v(" "),a("p",[t._v("这里只是介绍一种思想，要么把请求数减少，要么就想办法突破请求限制，当然任何事情其实都是有利有弊的，具体问题具体分析。"),a("br")])])}),[],!1,null,null,null);r.default=s.exports}}]);