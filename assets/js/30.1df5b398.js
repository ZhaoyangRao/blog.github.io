(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{165:function(e,r,t){"use strict";t.r(r);var a=t(0),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"web-worker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#web-worker"}},[e._v("#")]),e._v(" Web Worker")]),e._v(" "),t("p",[e._v("js是单线程的，而Web Worker就是为js创造了多线程的环境，主线程执行代码遇到new Worker，就创建了一个独立于主线程外的worker线程，两者互不干扰，woker线程执行完成再把结果通知主线程。")]),e._v(" "),t("h3",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[e._v("#")]),e._v(" 特点")]),e._v(" "),t("ul",[t("li",[e._v("与主线程同源")]),e._v(" "),t("li",[e._v("不能读取或者操作DOM")]),e._v(" "),t("li",[e._v("不能读取本地文件")]),e._v(" "),t("li",[e._v("也不能读取或者更改主线程的变量\n简单的理解它就是独立于主线程外的一个单独的线程，浏览器为了安全考虑，限制其对主线程运行的网页代码环境进行操作，只能通过特定的通信机制传递消息给主线程，有点安全沙箱的意思。")])]),e._v(" "),t("h3",{attrs:{id:"常见的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的用法"}},[e._v("#")]),e._v(" 常见的用法")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("创建一个woker对象\nlet myWorker= new Worker('my_task.js')\n\n终止worker\nmyWorker.terminate()\n\n通信\nmyWorker.postMessage()\n")])])])])}),[],!1,null,null,null);r.default=s.exports}}]);